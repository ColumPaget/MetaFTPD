#EXAMPLE METAFTPD CONFIG

#Order of authentication methods to try. Just leave out any that you don't want to use, so 
#if you don't want to authenticate by pam, just leave out 'pam' from the list
AuthMethods=native,pam,shadow,passwd

#Use an alternative authorization file than the default
#(This is only for 'native' authentication, not for pam, shadow, etc)
AuthFile=/etc/FileServices.auth

#Chroot before doing anything else, so all authentication files etc need to be in the
#chroot, and home directories will be interpreted within the chroot
#ChRoot=/var/ftp

#Chroot to a directory AFTER login. This logs in using information in /etc, but then chroots into the
#given directory. If there are user home directories under the chroot (as specified by passwd or native 
#authentication) then chdir (but not chroot) into them. This creates a shared directory that all users 
#can have access to, while preserving their own private directories under it (filesystem permissions
#must be correctly set for this to work) 
#ChShare=/var/ftp

# Chroot into users home dir after login
ChHome

#list of users who CAN'T login with ftp!
DenyUsers=root,nobody,fred

#if you set this, and leave 'DenyUsers' blank, then it's taken that all users are
#denied except those listed here
#This was previously uncommented in this example config, and drove me crazy everytime I 
#installed metaftpd and couldn't understand why no one could log in!
#AllowUsers=wendy

#Bind to a particular addresss on a multihomed machine, and only accept connections on that
#BindAddress=192.168.2.1

#Port to run ftp service on
#Port=2121

#Specify a range of ports to use for data connections. 'LowPort' sets the lower bound, 'HighPort' the upper. 
#Useful if working through a firewall, you can allow incoming data connections to these ports only.
#However, you can run out of ports if you get too many users at once (in this case more than 100)
DataConnectionLowPort=9000
DataConnectionHighPort=9100

#Idle timeout. Users idle for this long will be disconnected. This is the soft limit (user modifiable with SITE IDLE)
Idle=300

#Idle timeout. Users idle for this long will be disconnected. This is the hard limit
MaxIdle=600

#banner to display on login
Banner=Not a public server: Unauthorized access prohibited

#List of FTP verbs that can be used, this selection denies use of 'PORT' and forces use of 'PASV'
#but allows use of 'SITE' commands and XMD5
#PermittedCommands=USER,PASS,XCWD,CWD,XCUP,CDUP,TYPE,RETR,STOR,LIST,XDEL,DELE,QUIT,XPWD,PWD,XMKD,MKD,XRMD,RMD,RNFR,RNTO,PASV,FEAT,SITE,XMD5

#This allows the following 
#NOOP,USER,PASS,PORT,XCWD,CWD,XCUP,CDUP,TYPE,RETR,STOR,LIST,NLST,MLST,MLSD,XDEL,DELE,QUIT,XPWD,PWD,XMKD,MKD,XRMD,RMD,RNFR,RNTO,PASV,FEAT
#So no 'SITE' or other unusual commands
#PermittedCommands=Basic

PermittedCommands=ALL

#default group for FTP users to be members of
DefaultGroup=users

#this limits uploaded files to about six meg in size
MaxFileSize=6000000

#set logfile path. Some variables in the form $(VariableName) can be included to make unique logs for certain
#users or machines. Currently there are three variables obeyed, 'User', which is the metaftpd username 
#(which might not be a real system user if native authentication is being used); 'RealUser', which is the
#username that a 'native authentication' user maps to; 'ClientIP', IPaddress that ftp connection is coming
#from
 
#Log file for any messages that don't relate to a user, or which are
#logged before a username has been supplied
ServLogFile=/var/log/metaftpd/server.log

#Log file for users. Include the variables $(User) $(ClientIP) and $(RealUser)
#to create user/machine specific logfiles

#LogFile=/var/log/metaftpd.log
#LogFile=/var/log/metaftpd/$(User).log
LogFile=/var/log/metaftpd/$(ClientIP).log


# 'Hook functions', scripts run when something happens. These scripts are run by the parent process, and will run as root by default. You should write your scripts carefully.

#All 'hook function' configs have the form <hook name>=<script path>,<user>,<directory>
#the 'user' and 'directory' entries are optional. If not supplied then the scripts will
#be run as root, and in the directory where metaftpd started up.

#run AFTER upload or download. Argument is the full path of file uploaded or downloaded
UploadHook=/usr/local/sbin/MetaFtpUploadHook.sh
DownloadHook=/usr/local/sbin/MetaFtpDownloadHook.sh

#run AFTER file deleted. Argument is the full path of file 
DeleteHook=/usr/local/sbin/MetaFtpDownloadHook.sh

#run AFTER file renamed. 2 Arguments, old path and new path
DeleteHook=/usr/local/sbin/MetaFtpDownloadHook.sh

#run AFTER user logon. Argument is the username
LogonHook=/usr/local/sbin/MetaFtpLogonHook.sh

#run BEFORE user logout. Argument is the username
LogoffHook=/usr/local/sbin/MetaFtpLogoffHook.sh

#run BEFORE data connection established. 5 Arguments, source-ip source-port dest-ip dest-port type
#'type' can be 'FromClient' or 'ToClient' depending on whether it is a PASV or PORT connection, or 
#'ToServer' and 'FromServer' if it's a proxy connection.
#Normally one of 'source-ip' or 'dest-ip' will be 0 because only one port is normally known when
#the connection is set up.
ConnectUpHook=/usr/local/sbin/MetaFtpConnectUpHook.sh
#As above, but run AFTER data connection closed. 5 Arguments, source-ip source-port dest-ip dest-port type
#These hooks allow you to dynamically insert iptables firewall rules
ConnectDownHook=/usr/local/sbin/MetaFtpConnectDownHook.sh


